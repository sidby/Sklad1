@model SidBy.Sklad.Web.Models.IndicatorsModel
@using SidBy.Sklad.Web
@using SidBy.Sklad.Domain.Enums

@{
    ViewBag.Title = "Администрирование";
    string appPath = Request.Url.GetLeftPart(UriPartial.Authority) + Request.ApplicationPath;
    int userId = WebSecurity.CurrentUserId;
}

<hgroup class="title">
    <h1>@ViewBag.Title.</h1>
    <h2>@ViewBag.Message</h2>
</hgroup>

<div>
    <h2>Резервное копирование базы данных (БД)</h2>
    <br />
    <button id="createFullBackup">Сделать полную копию БД</button>
    <label style="display:inline;">Загрузить файл БД:</label> <input id="fileupload" type="file" style="width:130px;" name="files" multiple="multiple" />

    <input type="hidden" value="@userId" name="userId" id="userId" />

    @{
        string[] roles = Roles.GetRolesForUser(WebSecurity.CurrentUserName);
    }

    <div id="backupFileListContainer" class="reportcontainer"></div>


    <label style="display:inline;" for="dataDeletionFromDate">Удаление данных с</label>

  <input name="dataDeletionFromDate" id="dataDeletionFromDate" style="width:80px;display:inline;" class="date-picker" />
  по  <input name="dataDeletionToDate" id="dataDeletionToDate" style="width:80px;display:inline;" class="date-picker" />
    <button id="dataDeletion" name="dataDeletion">Удалить</button>
</div>

<script id="backupFilesTemplate" type="text/x-jsrender">
    <table border="0" class="report_table">
        <thead>
        <tr>
            <th>Файл БД</th>
            <th>Дата создания</th>
            <th></th>
            <th></th>
        </tr>

        </thead>
        <tbody>
            @*result.RelativeUrl = backupFolder;*@
            {{for Files ~backupFolder=RelativeUrl }}
            <tr class="{{:#index%2 ? 'even' : 'odd'}}">
                <td>
                    <a href="/{{>~backupFolder}}/{{>FileName}}">{{>FileName}}</a>
                </td>
                <td>{{>~getDate(Modified)}} </td>
               <td>
               <button data-filename="{{>FileName}}" class="deleteBackup">Удалить</button>
                </td>
                <td>
                    <button data-filename="{{>FileName}}" class="restoreBackup">Восстановить</button>
                </td>
            </tr>
            {{/for}}
        </tbody>
    </table>
</script>

<script>
        jQuery(document).ready(function () {
            getBackupFiles();

            function formatDate(date) {
                ("0" + date.getDate()).slice(-2) + '.' + ("0" + (date.getMonth() + 1)).slice(-2) +
                '.' + date.getFullYear();
            }

            $(document).on("click", '.deleteBackup', function () {
                //do stuff
                var filename = $(this).data("filename");
                if (confirm('Вы действительно хотите удалить ' + filename + '?')) {
                    operateBackup(0, filename);
                }
            });

            $(document).on("click", '.restoreBackup', function () {
                var filename = $(this).data("filename");

                if (confirm('Вы действительно хотите восстановить базу из ' + filename + '?')) {
                    operateBackup(1, filename);
                }
            });

            function operateBackup(operation, filename) {
                var postData = {
                    operation: operation * 1,
                    filename: filename
                };

                $.ajax({
                    type: 'post',
                    url: '@Url.Action("OperateBackup")',
                    data: JSON.stringify(postData),
                    contentType: "application/json; charset=utf-8",
                    traditional: true,
                    success: function () {
                        getBackupFiles();
                        return false;
                    }
                });
            }

            $("#createFullBackup").button().click(function () {
                var that = $(this);
                that.prop("disabled", true);
                that.children().first().text("Создаётся резервная копия...");
                createFullBackup();
            });

            $("#dataDeletion").button().click(function () {
                var fromDateM = getMonthYear($("#dataDeletionFromDate"), 1);
                var toDateM = getMonthYear($("#dataDeletionToDate"));

                var postData = {
                    monthFromNumber: fromDateM.Month,
                    yearFromNumber: fromDateM.Year,
                    monthToNumber: toDateM.Month,
                    yearToNumber: toDateM.Year,
                };

                if ((postData.yearFromNumber * 12 + postData.monthFromNumber) >=
                    (postData.yearToNumber * 12 + postData.monthToNumber)) {
                    alert('Выберите даты с и по');
                    return;
                }

                if (confirm('Вы действительно хотите удалить даннные с ' +
                    postData.monthFromNumber + '.' + postData.yearFromNumber + ' по ' +
                    postData.monthToNumber + '.' + postData.yearToNumber + ' ?')) {
                    var that = $(this);
                    that.prop("disabled", true);
                    that.children().first().text("Данные удаляются...");

                    $.ajax({
                        type: 'post',
                        url: '@Url.Action("DeleteData")',
                        data: JSON.stringify(postData),
                        contentType: "application/json; charset=utf-8",
                        traditional: true,
                        success: function (data) {
                            alert(data);
                            return false;
                        }
                    });
                }

            });

            function createFullBackup() {
                var postData = {
                    employeeId: $("#userId").val() * 1
                };

                $.ajax({
                    type: 'post',
                    url: '@Url.Action("CreateFullBackup")',
                    data: JSON.stringify(postData),
                    contentType: "application/json; charset=utf-8",
                    traditional: true,
                    success: function () {
                        getBackupFiles();
                        $("#createFullBackup").children().first().text("Резервная копия создана");
                        return false;
                    }
                });
            }

            function getBackupFiles() {
                $.ajax({
                    type: 'post',
                    url: '@Url.Action("GetBackupFiles")',
                    contentType: "application/json; charset=utf-8",
                    data: null,
                    traditional: true,
                    success: function (data) {
                        renderBackupFilesTable(data, $("#backupFileListContainer"));
                        return false;
                    }
                });
            }

            function renderBackupFilesTable(data, container) {
                if (data) {
                    container
                    .html($("#backupFilesTemplate")
                    .render(data,
                    {
                        getDate: function (data) {
                            var date = new Date(parseInt(data.substr(6)));
                            return ("0" + date.getDate()).slice(-2) + '.' + ("0" + (date.getMonth() + 1)).slice(-2) +
                                '.' + date.getFullYear() + ' ' + date.getHours() + ':' + date.getMinutes() + ":" + date.getSeconds();
                        },
                    }));
                }
            }

            function getMonthYear(datepicker, defaultMonth) {
                var fromDate = datepicker.val();
                var fromDateM = {};
                if (!(fromDate.length > 0)) {
                    var d = new Date();
                    var m = 1;
                    if (defaultMonth > 0)
                        m = defaultMonth;
                    else
                        m = d.getMonth() + 1;
                    var str = m + '.';
                    datepicker.val(m + '.' + d.getFullYear());

                    fromDateM.Month = parseInt(m);
                    fromDateM.Year = parseInt(d.getFullYear());
                }
                else {
                    fromDateM.Month = parseInt(fromDate.split('.')[0]);
                    fromDateM.Year = parseInt(fromDate.split('.')[1]);
                }

                return fromDateM;
            }

            $("#dataDeletionFromDate").datepicker({
                changeMonth: true,
                changeYear: true,
                showButtonPanel: true,
                dateFormat: 'mm.yy',
                defaultDate: new Date((new Date()).getFullYear(), 0, 1),
                onClose: function (dateText, inst) {
                    var month = $("#ui-datepicker-div .ui-datepicker-month :selected").val();
                    var year = $("#ui-datepicker-div .ui-datepicker-year :selected").val();
                    $(this).val($.datepicker.formatDate('mm.yy', new Date(year, month, 1)));

                    updateHalfYearReport();
                }
            });

            $("#dataDeletionToDate").datepicker({
                changeMonth: true,
                changeYear: true,
                showButtonPanel: true,
                dateFormat: 'mm.yy',
                defaultDate: new Date(),
                onClose: function (dateText, inst) {
                    var month = $("#ui-datepicker-div .ui-datepicker-month :selected").val();
                    var year = $("#ui-datepicker-div .ui-datepicker-year :selected").val();
                    $(this).val($.datepicker.formatDate('mm.yy', new Date(year, month, 1)));
                    //$(this).datepicker('setDate', new Date(year, month, 1));
                    updateHalfYearReport();
                }
            });

            $("#dataDeletionFromDate").focus(function () {
                $(".ui-datepicker-calendar").hide();
                $("#ui-datepicker-div").position({
                    my: "center top",
                    at: "center bottom",
                    of: $(this)
                });
            });

            $("#dataDeletionToDate").focus(function () {
                $(".ui-datepicker-calendar").hide();
                $("#ui-datepicker-div").position({
                    my: "center top",
                    at: "center bottom",
                    of: $(this)
                });
            });

            $('#fileupload').fileupload({
                dataType: 'json',
                url: '/Administration/DbUpload',
                done: function (e, data) {
                    //console.log(data.result);
                    if (data.result.error > 0) {
                        alert(data.result.message);
                    }
                    else {
                      getBackupFiles();
                    }
                }
            });
        });
    </script>
